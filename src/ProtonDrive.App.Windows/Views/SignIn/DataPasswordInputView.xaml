<UserControl
    x:Class="ProtonDrive.App.Windows.Views.SignIn.DataPasswordInputView"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behaviors="clr-namespace:ProtonDrive.App.Windows.Toolkit.Behaviors"
    xmlns:converters="clr-namespace:ProtonDrive.App.Windows.Toolkit.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:loc="clr-namespace:ProtonDrive.App.Windows.Resources"
    xmlns:local="clr-namespace:ProtonDrive.App.Windows.Views.SignIn"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    FocusManager.FocusedElement="{Binding ElementName=DataPasswordBox}"
    d:DataContext="{d:DesignInstance local:DataPasswordInputViewModel}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.Row="0"
            Text="{loc:Resource SignIn_Text_SecondPassword}"
            FontSize="20"
            HorizontalAlignment="Center"
            Margin="0,30,0,0" />

        <Grid
            Grid.Row="1"
            Margin="0,10,0,0">

            <Grid>
                <PasswordBox
                    Name="DataPasswordBox"
                    AutomationProperties.AutomationId="MailboxPasswordBox"
                    Padding="6,0,28,0">
                    <b:Interaction.Behaviors>
                        <behaviors:PasswordBindingBehavior Binding="{Binding Password, UpdateSourceTrigger=PropertyChanged}" />
                    </b:Interaction.Behaviors>
                    <PasswordBox.Style>
                        <Style
                            TargetType="PasswordBox"
                            BasedOn="{StaticResource {x:Type PasswordBox}}">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding RequestPasswordFocus}"
                                    Value="True">
                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </PasswordBox.Style>
                </PasswordBox>

                <TextBox
                    Grid.Column="0"
                    Text="{Binding PlainPassword, Mode=OneWay}"
                    IsReadOnly="True"
                    Visibility="{Binding DisplayPlainPassword, Converter={x:Static converters:BooleanToVisibilityConverter.FalseIsCollapsed}}"
                    Padding="6,0,32,0" />

                <Button
                    Grid.Column="0"
                    FocusVisualStyle="{x:Null}"
                    ToolTip="Show password"
                    Visibility="{Binding IsPasswordEmpty, Converter={x:Static converters:BooleanToVisibilityConverter.TrueIsCollapsed}}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Padding="0"
                    Margin="0,0,7,0">
                    <Button.Style>
                        <Style
                            TargetType="{x:Type Button}"
                            BasedOn="{StaticResource TransparentButtonStyle}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Path
                                        Data="{StaticResource Icon.Eye}"
                                        Fill="White"
                                        Width="20"
                                        Height="20" />
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Data="{StaticResource Icon.EyeSlash}"
                                                Fill="White"
                                                Width="20"
                                                Height="20" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.7" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <b:InvokeCommandAction Command="{Binding DisplayPlainPasswordCommand}" />
                        </b:EventTrigger>
                        <b:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <b:InvokeCommandAction Command="{Binding HidePlainPasswordCommand}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
            </Grid>

            <TextBlock
                Text="{loc:Resource SignIn_Text_SecondPassword}"
                Style="{StaticResource WatermarkStyle}"
                Visibility="{Binding IsPasswordEmpty, Converter={x:Static converters:BooleanToVisibilityConverter.FalseIsCollapsed}}" />
        </Grid>

        <Button
            AutomationProperties.AutomationId="UnlockButton"
            Grid.Row="2"
            Content="{loc:Resource SignIn_Button_Unlock}"
            Command="{Binding ContinueSigningInCommand}"
            IsDefault="True"
            Style="{StaticResource PrimaryButtonStyle}"
            Height="32"
            Margin="0,30,0,0" />

        <Button
            AutomationProperties.AutomationId="SignInAsAnotherUserButton"
            Grid.Row="3"
            Content="{loc:Resource SignIn_Button_SignInAsAnotherUser}"
            Command="{Binding RestartSignInCommand}"
            Style="{StaticResource HyperlinkButtonStyle}"
            HorizontalAlignment="Center"
            Margin="0,10,0,0" />
    </Grid>
</UserControl>
